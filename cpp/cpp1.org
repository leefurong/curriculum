课程体系
#语言 入门
算数表达式、逻辑运算、变量与类型（int/float/long/double/bool)、输入输出(iostream)、顺序结构、分支结构、循环结构、数组、字符串(std::string)、函数、类与对象​
1 邓布利多的手表——函数、输入输出、算术表达式、int/float
编程主题：邓布利多的手表
阅读《哈利波特与魔法石》第一章。 邓布利多的手表是怎样的？ 请写一个程序， 输入手表的指针信息， 输出当前的时间信息。
请输入分针位置：5
分针在5时， 表示当前分钟为25分。
教学目标
main函数的定义
函数定义的四个要素
参数列表
返回值类型
函数名
函数体
变量类型工具箱： int、float类型用来表达整数、小数。
乘法算术表达式
顺序结构： 程序会从上到下逐句执行。
语句以分号结尾
语句块用大括号包含起来
基本的cin/cout
用双引号括起来字符串常量
作业
九又四分之三站台
意图
巩固课堂所学
开始尝试自己编程、调试的感觉
思考复杂问题时的态度
打字速度达到10键/分钟
2 九又四分之三站台（变量类型int/long， 复合算术表达式， 取模）
编程主题：
九又四分之三站台
教学目标
用双引号表示字符串。
变量类型工具箱： int, long
表达式工具箱： && || %
进一步熟悉顺序结构
代码的执行过程
源码->编译->可执行文件->运行
代码风格
缩进
注释
变量名
可读性
作业
去洛谷， 注册， 找到新手村， 完成“洛谷的第一个任务”。
打字速度达到15键/分钟
3 分院帽（分支, string, ==）
分院帽
引入
先做一个简单的分院帽。 根据姓名来分。以后我们学的更多， 就可以做出更好的分院帽了。
课程结构
先回顾上次的作业
分钉子的问题， 53个钉子， 几个盒子， 袋子里几个钉子？
code review
d/10, d%10
引入
编程目标： 用户输入姓名，输出哪个学院
先请同学写10分钟。 对所需知识有一个期待。
同学尝试后， 揭示主题： 以前写的程序， 都是从上到下执行的。 无法处理“如果， 就”这样的情况。
if else： 介绍的阶梯：
画一条河流， 一分为二。
画分院帽的逻辑图（根据姓名）
用中文写程序
替换为if/else
string初体验（不必细究）， 只是开始使用（头文件， 变量声明， cin操作， ==操作）
=与==
if/else: 两分。 如果要多分，怎么办？
if() else if() else...
拓展（如果有时间就课上做， 否则课后做）
引入循环
显示这个学院一共分了几个人。
输出0~100间所有的偶数
输入一个数， 求出它所有的因数
4 变形术（逻辑运算）
教学目标
类型工具箱
布尔型: 两个值true/false, 转化成int是1/0。
运算：and or not，短路
A && true, A||true, A&&false, A||false
课堂
story
麦格教授： 讲桌变成一头猪
课堂： 火柴变成一根针
赫敏让火柴起了变化
其他人都还不行
麦格朝赫敏露出了微笑
过程
回顾作业： 讲解一下， 格式的要求， 变量名的要求。
构建
基础版：
输入火柴， 输出针
输入针， 输出火柴
输入其他任何东西， 输出一样的。
中级版：
假设学员们超过10等级后， 就可以把火柴变成针， 还可以变回来。显然赫敏这次课上达到了11. 输入魔法师功力等级+物品。输出变成的东西。
level > 10 && 火柴: 针
level > 10 && 针: 火柴
else: 原样
增强版：使用while
提高版： 使用函数
main函数只需要这么写
while(cin >> level >> original){
cout << change(level, original);
}
string transform(int level, string original);
提炼：
level > 10， 这是一个运算， 运算结果是什么？
cout << 8>10 << 8>10; // 尝尝布尔值的味道
所有变量， 都有类型。 知道类型， 才能知道可以做什么操作。 就像整数可以加减， 字符串的加减意味着别的意思。
演示整数加减、字符串加减
那么true, false是什么类型？
布尔值介绍
如何声明布尔变量
bool enoughLevel = level > 10;
这个类型上有什么操作？
cout << enoughLevel && isHuochai试试？
cout << true && false?
三目运算：
cout << enoughLevel && isHuochai: zhen: huochai
运算定律(不用去记住， 只需要知道有这些回事儿就行了， 以后写程序可以多一个“工具”）
true || A ----> true
false && A ---> false
false || A --> A
true && A --> A
交换律：
A && B == B && A
A || B == B || A
结合律
A && (B||C) == (A && B)|| (A&&C)
分配率
A || (B && C) == (A||B)&& (A||C)
板书
类型
int, float, long, long long
bool
声明
操作
!
&&
||
操作结果（表格）
课后作业：
https://shimo.im/docs/2473QyXaNr8c13wP
5 飞天扫帚一（循环初探）
意图： 循环的结构
基本结构
while (bool){}
三大要件： 初始化、判断条件、循环体（改变条件）
重复输入 while(cin >> a)
cin >> a发生了什么？返回的是cin， 但是如果一个地方需要bool， 就会把cin转成bool
项目：飞天扫帚
up()
用流程图， 介绍循环的几个基础结构
循环体
判断条件
随堂练习： 打印20个星星
课后练习
简单 输入一个数字n， 输出n(不包含n)以内所有3的倍数。
中等 延续上一题， 计算出这些3的倍数的总和。
大神 阅读下面这个故事， 写程序模拟， 输出每个月仆人的银子数量。 最终计算出国王回来的时候， 三位仆人分别有多少锭银子。从前，一个国王要出门远行，临行前，交给3个仆人每人一锭银子，吩咐道:“你们去做生意，等我回来时，再来见我。”国王出门后， 第一个仆人用银子买了一些丝绸， 开起了丝绸店。 每个月， 他都能赚到10%的钱。例如：第一个月开始时， 他有1锭银子。 这个月赚了1 * 10%=0.1锭银子。 第一个月结束时， 有1.1锭银子。第二个月开始时， 他有1.1锭银子。这个月赚了1.1 * 10%=0.11锭银子。 第二个月结束时， 有1.21锭银子。第二个仆人花了0.1锭银子坐船， 找了一个码头， 去工作， 每个月可以赚到0.2锭银子。第三个仆人把银子妥善保管起来， 在家里过着自给自足的生活。3年后， 国王回来了，第一个仆人说:“主人，你交给我的一锭银子，我已赚了？锭。”于是，国王奖励他？座城邑。第二个仆人报告:“主人，你给我的一锭银子，我已赚了？锭。”于是，国王奖励他？座城邑。第三仆人报告说:“主人，你给我的1锭银子，我一直包在手帕里，怕丢失，一直没有拿出来。 ”于是，国王命令将第三个仆人的1锭银子赏给第一个仆人，说:“凡是少的，就连他所有的，也要夺过来。凡是多的，还要给他，叫他多多益善。
6 飞天扫帚二（for循环）
教学目标
理解for循环， 与while的区别， 适用场景。
break
教学过程
作业回顾[90分钟]
引入： 打印1~100
选做练习： 如果你确定一个循环执行的次数， 可以用for循环来简化程序。比如， 三个仆人的金钱， 可以这么写：
for(int month = 0; month < 36; month++){
...
}
作业：
初级： 在飞行课上， 飞天扫帚记录了各自飞行的高度。 假设一共10名学生， 输入他们的飞行高度， 求出最高的。（只能使用3个以内的变量）
中级： 求出平均高度（只能使用3个以内变量）
中级：求出最大差距（只能使用4个以内变量）
高级： 打印暑假的日历
高级： 小红花 https://vijos.org/d/bdfz/p/5ba44514d3d8a13cf3780e38
高级： 输入一个数字， 判断它是否质数。
提炼
while和for， 什么情况下比较好用？
关键在于， 你是否知道要跑多少次？
猜数字， 用什么？
7 邓布利多的熄灯器（数组初探）
教学目标
了解数组的作用
了解数组的用法
声明
类型
长度
初始化
字面量 {1, 2, 3}
赋值
访问
作业回顾
平均高度
最大差
构建
邓布利多的熄灯器简版
主题： 一个灯。用户敲一下回车， 变换一下。
意图
巩固布尔类型的切换，取反。
lamp = !lamp
运用函数做show(lamp)
课后拓展
https://shimo.im/docs/Y25q5Mjd06xSdqDg
提炼
数组的知识讲解
8 飞天扫帚三（双层for循环）
知识点
 理解双重循环。
用函数隔离复杂性。
作业回顾 #TODO
要点
函数show
双目运算
一排灯： 数组的运用， for循环回顾
构建： 打印高度星星
要点：
引导学员用道具来深入了解程序运行的原理。
引导学员升级思考方式： 用函数的方式来思考。
课后练习
#简单 输入x， 输出x行x列的星星矩阵
#中等 输入x， 输出“是质数”，还是“是合数”
#高级 输入x， 输出x以内的所有质数
#高级 等腰三角形 http://oj.noi.cn/oj/#main/show/1031
9 魔法学院评比（二维数组）
教学意图
学习二维数组。
巩固之前所学的双重for循环。
项目
“期中考试”
输入哈利波特、罗恩、赫敏， 魔药课、飞行课、变形课的成绩。
输出这些成绩。
计算出单科各人平均成绩， 单人各科成绩。
过程
讲解上节课作业“等腰三角形”（1h）
要点
如何推演， 找到规律， 得出公式。
如何用双重循环。
如何用函数来简化双重循环。
介绍魔法学院评比问题， 并引出二维数组的需求。（一位数组可以存一排， 二维数组多排——类似表格）
介绍二维数组的知识
声明
初始化
下标访问
演示这个问题的写法： 输入部分。
请学员独立写出输入、输出显示部分。
课后作业
#简单 输入学员编号、科目编号， 输出分数。
#中等 输入科目序号， 求平均分。
#困难 输入d 1或s 1， 分别表示科目1， 学生1， 求对应科目或者学生的平均分。
#大神 数独验证： https://vijos.org/p/1335
10 分院帽（二）（字符/字符串/string）
主题： 分院帽（二）
记账： 分院帽有一个账本， 存成了字符串， ABCD分别表示四个学院。输入一个字符串， 例如CCBD， 计算A有多少人， B有多少人……
通过把某个学院的学生名字存储在一个字符串数组里， 来查询学生属于哪个学院。 比第一次课上的if语句方便的多。​​
教学意图
了解字符串string其实是由字符char组成的。
char类型
字符串操作
比较
字符访问s[i]
for x : s循环
通过抽出函数contains， 来体会函数的价值： 把复杂的任务模块化， 变成简单的任务。
过程
作业回顾
一定要过的： 求平均分。
问题分析
计算学院的学生数。
先用for int i=0这样的for循环。
升级到for x: s
查询学员所属学院
分析问题，可以拆分成怎样的子问题？ 怎样做一个可重用的功能？contains()
if (contains(collegeA, name))来实现。
课后拓展
容易： 为了记录乒乓球比赛的得分， 可以用一个这样的字符串： "WLWWWLL"。 每一个W表示1号赢， L表示1号输。 则刚才这个字符串表示比分为4:3， 因为有4个W， 3个L。 写一个程序， 用户输入这样的字符串（字符串长度为20）， 程序输出1号赢的次数。
中等： 为了记录乒乓球比赛的得分， 可以用一个这样的字符串： "WLWWWLL"。 每一个W表示1号赢， L表示1号输。 则刚才这个字符串表示比分为4:3， 因为有4个W， 3个L。 写一个程序， 用户输入这样的字符串（字符串长度为20）， 程序显示比分。
极度困难： 密码强度验证。
用户在设置密码时， 网站常常会判断这个密码的强度。 假设一个密码如果包含大写、小写、数字， 有一种， 为“脆弱”， 两种为“中等”， 三种为“强”。 写一个程序， 用户输入一个密码字符串， 程序输出“脆弱”或者“中等”， 或者“强”。
11 密码（深入字符）——进一步巩固字符串使用（.size(), [i])
回顾作业
乒乓球比赛计分
密码强度验证
课后作业
中： 数独验证： 输入一个长度为9的字符串， 输出“正确”，还是“错误”。 当且仅当这9个字符包含了'1'~'9'的全部字符， 为正确。 例如：
正确： 361987245
中： 中国人形容熟悉一篇文章时，会说“倒背如流”。 请写一个程序， 输入一个英文句子， 将句子的每个字母倒过来输出。例如， 输入"Good morning, Harry", 输出为"yrraH ,gninrom dooG"
12 变形术二（类与对象）————update： 宠物
作业回顾
数独验证
教学意图
初步了解类、对象。
如何定义
如何使用
主题介绍：
用类实现变形术(update： zoo.cpp， update:宠物养成)
为了有个全局认识，先学使用，再写定义
拓展
平面中的点
作业
简单： 空间中的点
实现一个简单的类， 可以支持这样的操作：
Point p(x, y, z);
cout << p.x << p.y << p.z;
中等， 实现一个学生类。包含两个属性： 名字、成绩。
困难: 学生成绩管理:
录入： 录入5个学生， 每一个都包含一个名字， 一个成绩。
查询： 输入一个序号， 输出名字和成绩。
13 故事机（综合运用）
教学目标：
综合运用所学， 做出有意思的东西。
学习使用随机数。
srand(unsigned(time(0)))
rand() % 5
课堂过程
介绍故事机的功能
引导大家观察，简单故事的结构。
示范如何做一个简单的故事机
人物+事件
用类。 struct StoryTeller{}
StoryTeller.say()
请大家自行实现，并且拓展到， 加一些更多的元素： 例如，随机时间， 随机的形容词、地点等。
课后作业
简单 学院杯
霍格沃茨每年有一次学院杯。设想你为学院杯做一个软件， 老师、级长可以使用你的软件， 输入四个学院分数， 输入完毕，你的软件会给出评分最高的学院。 其中， 每一个“学院分数”的输入格式是：学院名 分数。
范例输入：
赫奇帕奇 30
斯莱特林 20
格兰芬多 70
拉文克劳 28
范例输出
格兰芬多 70
中等 学院杯
霍格沃茨每年有一次学院杯。设想你为学院杯做一个软件， 老师、级长可以使用你的软件， 输入5个“加扣分事件”， 输入完毕，你的软件会输出评分最高的学院名称。 其中， 每一个“加扣分事件”的输入格式是：学院名 加扣分数（加分为正数， 扣分为负数）。
范例输入：
格兰芬多 20
斯莱特林 -5
拉文克劳 5
拉文克劳 -10
斯莱特林 10
范例输出：
格兰芬多
困难 学院杯
霍格沃茨每年有一次学院杯。设想你为学院杯做一个软件， 老师、级长可以使用你的软件， 输入5个“加扣分事件”， 输入完毕，你的软件会给出评分最高的学院。 并且输出这个学院的加扣分记录。其中， 每一个“加扣分事件”的输入格式是：学生名 事件。 假设有效的学生和事件如下：
范例输入：
哈利波特 拯救校园
赫敏 拯救校园
罗恩 拯救校园
厄尼 回答问题
赫敏 回答问题
范例输出：
格兰芬多
事件
做好事 +5
拯救校园 50
回答问题 5
作业写的好 +10
赢得魁地奇杯 150
做错事情 -5
违反纪律 -5
学生
格兰芬多
哈利波特
赫敏格兰杰
罗恩韦斯莱
斯莱特林
马尔福
高尔
克拉布
赫奇帕奇
厄尼
塞德里克
汉娜艾博
拉文克劳
秋张
卢娜
莉莎杜平
14 学院杯（一）（最大值、struct巩固）
编程目标： 实现简单版学院杯
学习目标
找最大值算法
巩固类的使用(struct把学院、分数放在一起）
课堂过程
作业回顾： 学院杯，请大家把简单版做一下。
老师介绍思路1. 输入方面
同学继续编程
老师介绍找最大值的思路
同学继续编程
feedback： 于悦写出这样的代码， 完全正确， 用不着最大值算法和struct， 也是简洁明了。所以这个例子不够实现意图。或许要50个输入。但是50个输入就需要OJ来测了。
int a, a1, b, b1, c, c1, d, d1;
cin....
if (a1>b1 && a1> b1&& a1>c1)...
level1他很快做好， 我们升级到level2： 假设有20个学院要评比， 就无法用abcd这样的字母来表示了对吗？
老师示范，从最傻到最优雅。
作业
(见石墨文档： https://shimo.im/docs/eVMAPV2EwY9Imqg8）
#算法 入门
交换变量、求最大值、最大差、星星矩阵、穷举（质数， 水仙花数）、剪枝（质数）、选择排序、回文、阶乘、数字拆解到一位一位、密码强度验证
15 学院杯（二）： （struct巩固、循环输入、累加）
导入： 通过之前的学习， 我带你们逛了一下编程这个新世界。 见过了这个世界里的一些主要的风景。 但都是走马观花。要想在新世界玩的转， 还需要更加熟悉这里的玩法。所以接下来的14次课， 我们一起通过一些问题， 来训练我们的思考能力， 熟悉新世界的玩法。每一个练习都请大家认真对待。
编程要点
学习处理noi风格的输入方式： 先输入一个总条数， 再逐条输入。
累加到struct数组之一上。
拓展
奖学金（https://vijos.org/p/1001）
16 学院杯（三）： 集合（set、包含）
编程要点
先手写功能
再介绍标准库里的<set>
拓展
#语言 进阶
再论变量、文件与流、switch、变量作用域、指针与链表、引用参数传递、再论类与对象（public/private/初始化/作用域等话题）， 函数重载、构造函数、析构函数、递归（基线条件与递归条件）、容器
#算法 进阶
哈希、集合、栈、队列、再论链表、树、二叉树、图； 暴力求解； 排序、二分查找
#语言 高阶
动态内存、泛型、STL算法库， STL字符串、函数指针， union、c里面的一些内容（scanf, struct， cstring等）
#算法 高阶
算法分析、哈希、贪心与分治、图搜索、动态规划
#语言 + #算法 +竞赛训练
数论、计数、概率、递推、数学期望、连续概率、最小生成树、最短路径、高级专题
教学材料
自学材料
知识
练习
你有什么启发？
工具
c++编译器
zoom：屏幕共享， 讲解
洛谷： 编程挑战
幕布： 学员做笔记
课堂结构——体验式课堂
15 作业回顾（抽签， 学员到台上来， 介绍自己的作业体验， 大家一起讨论）
30 编程体验（运用已知知识， 结对编程）
30 更好的方法（新知介绍）
30 拓展（新知运用、与生活的连接、思维方式的升级）
10 code review(老师随机抽取学员代码， 在投影上一起review， 点评）
5 作业布置, 分发课程资料。
