
* c++课程大纲（第二模块: 控制台游戏， 熟练编程！）
经过前面的学习， 我们已经见过了c++里面的基础功能， 只不过还不熟练。
在编程的时候， 常常还需要思考， for循环怎么写， 数组怎么写。
第二模块， 我们将通过实际项目， 来巩固编程技能。
经过这个模块的学习， 我们将能够把这些语句当成“第二本能”， 不需要太多思考， 就能应用。
** 第15课： 贪吃蛇的头（控制台游戏入门）
*** 知识点
**** system("cls")
**** 用x, y变量来驱动这个小游戏的思想。
*** 过程
*** 课后作业

** 第16课： 小尾巴(巩固循环、变量)
*** 知识点
**** 思考能力：训练循环、变量的使用能力。
**** 思考能力：接触较为复杂的思考。
*** 过程
**** 导入： 贪吃蛇游戏是不是有个小尾巴？我们今天来做它的尾巴！
**** 思考+讨论： 请同学们花一些时间思考， 怎样做小尾巴？先考虑一个“小点点”
***** 用什么数据表示？
****** 需要多少个数据？
****** 分别是什么类型呢？
***** 这个数据在什么时候应该改变？
***** 怎样改变？
***** 如何根据这个数据来显示？
**** 编程实现
**** 拓展
***** TODO 思考一下， 可以如何拓展？
*** 课后练习
**** :简单 按一下空格键， 小星星变身， 成为小x！
**** :中等 请升级成有两个小点点的尾巴！
**** :困难 每按10次方向键(asdw)， 将出现一个随机掉落的星星！再按20次方向键， 星星消失！
** 第17课： 小尾巴(用一个二维数组来表达显示内容， 更易懂的代码)
上节课的程序想必把大家难坏了。难得大家上课都开始打游戏了~
难道编程就要这么难么？不是的！
之所以这么难， 是因为我们没有找到简单的方法。
*** 知识点
**** 二维数组的应用
**** 接触模块化的思维方法， 体验到模块化的好处
*** 过程
**** 演示如何改进设计：想象我们有一张表格， 记录了几行几列里要打印什么东西。
是不是就可以很轻松的显示出来了呢？请同学们实现这个表格的打印功能。
***** 一个20行20列的数组， 里面全部初始化为'a'
***** 输出这个二维数组的内容
***** 用函数来实现： output(r)
***** 实现两个setR函数： 
****** setR(r, c)
****** setR(r, x, y, c)
***** 在main里完成主循环。（while true)
**** 提炼： 我们通过改变程序的结构， 来让程序更容易懂。 
添加了一个中间的数据： 一个二维数组， 来让事情变得更简单。
*** 课后练习
**** 简单 实现更长一点的尾巴： 2个*
**** 中等 课堂上的程序， 如果小蛇走到边缘， 会出错。 为什么？ 请改进这个程序， 解决这个问题。
**** 难 按10次键后，会随机掉落一个水果。
** 第18课： 更长的尾巴(用数组来表达尾巴, 而不是x1 y1 x2 y2 x3 y3...)
*** 知识点
**** 加深对数组应用场景的理解。
**** 领略算法之美。
*** 过程
**** 作业回顾： 讲解如何实现上次的作业”两个*作为尾巴“。
***** 有了上节课的”草稿“显示方法， 显示不再是难题。 不过， 按下按键，如何移动三个点？
用”妈妈和宝宝“， 你发指令， 一次只能移动一个人的比喻， 来讲解移动顺序。
***** 一般规律： 不管多少长度的尾巴， 只需要遵循先让后面的移动到他的”妈妈“这样的顺序， 就完全ok。
**** 引入： 那么， 我们就可以实现长度为8、10甚至更长的尾巴了。
不过， 如果有一大堆变量x1,...x8， 编程体验一定很差。
**** 大家还记得用什么方法来表达”一系列差不多的东西“？
**** 请大家用数组来实现， 多个尾巴。
*** 课后挑战
**** 简单 实现如果碰到边界就显示”你输了“。
**** 中等 不允许蛇头向身体方向倒着移动。 比如，如果蛇头朝右， 下次按a键就不允许有效果。
**** 困难 在贪吃蛇的世界里，设置一个”穿越点“， 小蛇经过这里的时候， 可以穿越到另一个点。
** 第19课： vijos计数问题（十进制）
*** 1814 记数问题
**** 教学意图
***** 进一步练习运算的思维方式
***** 字符串数字转换
****** std::to_string
****** std::stoi, stof
***** 进制运算的启蒙： 求整数的各个位上的数字。
***** 模块化思想： 拆分成函数， 更易懂
**** 课后练习
***** 简单 写一个函数， 函数头为： char itoc(int i); 该函数把一个0~9之间的整数转化为对应的字符。 例如 3 --> '3'
***** 简单 写一个函数， 函数头为： int ctoi(char c); 该函数把一个数字字符转化为对应的数字。 例如 '3' --> 3
***** 中等 写一个函数， 函数头为： string itos(int i); 该函数能够把一个整数转化为对应的字符串形式。 例如123--> "123"
提示： 可以利用前面写好的itoc函数。
***** 中等 写一个函数， 函数头为： int stoi(string s)； 该函数能够将一个数字字符串（例如"123")转化为对应的数字(123).
提示： 可以利用前面写好的ctoi函数。
***** 困难 写一个函数， 能求出一个数字的“逆序数”。 例如 123->321
至少用两种不同的方法实现。
** 第20课： vijos不高兴的津津
*** 教学意图
**** 进一步巩固对字符的理解。
**** 进一步巩固对函数的理解。
**** 巩固求最大值的算法， 灵活运用。
**** 了解三目运算符。
*** 教学过程
**** 上节课的练习回顾（1.5小时）。 要点： 函数。字符。
**** 请同学们开始做今天的练习
**** 讲解。 要点：最大值。三目运算。
*** 课后练习
**** 请完成这个练习， 通过VIJOS的测试。 ISBN号： https://vijos.org/p/1484
** 第21课：ISBN测试
*** 教学意图
**** 巩固字符、字符串的处理。
**** 练习对循环的使用。
**** 进一步加深对模块化思想的理解。
*** 教学过程
**** 先请同学们自行实现， 解决 https://vijos.org/p/1484
**** 老师介绍解题思路。演示解题过程。先把解决问题的过程， 用汉语写下来。然后转换成程序。
**** 暑假的最后一次课， 给大家一个简单轻松的A+B问题， 作为结束。
*** 课后练习
**** 简单 很多人把8当做幸运数字。 因此旅游时， 选房间号， 会想要包含幸运数字的房间。写一个程序， 用户输入一个4位数房间号， 程序判断是否包含幸运数字8。
**** 中等 升级这个程序， 计算输入的房间号中， 幸运数字的数量。 例如1238-->1(因为有一个8）
**** 困难 暑假旅游的时候， 你和妈妈在宾馆玩小猫钓鱼。桌面上一列牌最后那一张是刚出的， 是否可以钓上？可以钓几个？请写一个程序， 来计算可以钓上的牌数量。
***** 输入： 第一个数字表示接下来这一列牌的数量， 然后分别是牌的点数（A, 2, 3, 4,...10, J, Q, K, W）。 最后一张牌是新出的。
***** 输出： 根据新出的牌， 可以钓上多少张？（新出的这一张也算在内。 如果不能钓起来， 就输出0）
***** 范例：
****** 4 A 3 8 A  ---->   4
输入的内容， 第一个是4， 表示这一列有4张牌。 第二个到第五个表示这4张牌的内容。 其中最后一张是A， 因此可以钓起A-3-8-A这些牌。 一共四张， 因此输出是4.
****** 4 A 3 8 9 ---> 0
最后一张牌9， 钓不起任何牌。
** 第-课：死亡（碰到边界->碰到身体->边界检测的通用化->抽出checkAlive函数）
** 第-课：水果（不同形状的角色->rect->碰撞->对象->多个水果->对象数组）
** 第-课：自动向前走（sleep， windows事件处理的机制）
** 第-课：结对自由创作、改进（结对实践、解决问题）
** 第-课：（图形化游戏入门）
